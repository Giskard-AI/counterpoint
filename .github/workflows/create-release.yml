name: Create Release


on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag to be created, in the form X.Y.Z"
        required: true
        type: string

permissions:
  contents: write
  packages: read
  pull-requests: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Use X.Y.Z"
            exit 1
          fi

      # Check if the user is a member of the Giskard-AI organization
      - name: Check if organization member
        uses: JamesSingleton/is-organization-member@1.0.1
        id: is_organization_member
        with:
          organization: Giskard-AI
          username: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Interrupt job
        if: ${{ steps.is_organization_member.outputs.result == 'false' }}
        shell: bash
        run: |
          echo "Job failed due to user not being a member of Giskard-AI organization and the 'safe for build' label not being set on the PR"
          exit 1

      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # Write release version env vars
      - name: Write release version env vars
        run: |
          VERSION_NAME="v${{ inputs.version }}"
          VERSION_NUMBER="${VERSION_NAME:1}"
          echo "VERSION_NUMBER=${VERSION_NUMBER}" >> $GITHUB_ENV
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

      # Install uv
      - name: Install uv
        uses: astral-sh/setup-uv@v5 

      # Install toml-cli
      - name: Install toml-cli
        run: uv tool install toml-cli

      # Update project version
      - name: Update project version
        run: toml set --toml-path pyproject.toml project.version "${{ env.VERSION_NUMBER }}"

      - name: Commit changes and create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release/${{ env.VERSION_NAME }}
          commit-message: "Release ${{ env.VERSION_NAME }}: Bump version to ${{ env.VERSION_NUMBER }}"
          title: "Release ${{ env.VERSION_NAME }}"
          body: |
            This PR bumps the version to `${{ env.VERSION_NUMBER }}` for release.
          labels: release
          draft: false