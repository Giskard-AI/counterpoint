name: Full CI
on:
  push:
    branches:
      - main
      - dev
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre_checks:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install deps & build base images
        run: uv sync --all-extras

      - name: Check linting
        run: uv run ruff check .

      - name: Check Python 3.10 compatibility
        run: |
          output=$(uv run vermin --no-tips .)
          echo "$output"

          # Extract the minimum version using grep + sed
          min_version=$(echo "$output" | grep 'Minimum required versions:' | sed 's/[^0-9.]//g')

          # Compare versions using Python (to handle cases like 3.9 < 3.10)
          is_valid=$(python3 -c "import sys; sys.exit(0 if tuple(map(int, '$min_version'.split('.'))) >= (3, 10) else 1)")

          if [ "$is_valid" -ne 0 ]; then
            echo "‚ùå Minimum required version is $min_version, which is less than 3.10"
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    env:
      TEST_MODEL: "gemini/gemini-2.0-flash"
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.13"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps & build base images
        run: uv sync --all-extras

      - name: Run the tests
        run: uv run pytest
